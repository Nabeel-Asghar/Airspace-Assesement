"use strict";(self.webpackChunkreact_esri_template=self.webpackChunkreact_esri_template||[]).push([[2933],{66002:(e,t,r)=>{r.d(t,{yZ:()=>i});var s=r(93533);function i(e,t){const r=t||e.extent,i=e.width,a=(0,s.c9)(r&&r.spatialReference);return r&&i?r.width/i*a*s.hd*96:0}},62933:(e,t,r)=>{r.r(t),r.d(t,{default:()=>q});var s=r(56140),i=r(54721),a=r(87864),o=r(32656),l=r(77204),n=r(1721),y=r(59472),p=r(43072),h=r(39105),c=r(79881),u=(r(95830),r(68055)),m=(r(36544),r(30590)),d=r(87566),b=r(60538),g=r(9678),v=r(52937),f=r(66002),S=r(56700),x=r(87889),_=r(5698),C=r(48899),w=r(57407),O=r(63795),L=r(78910),E=r(33716),D=r(2194),N=r(10113),P=r(49708),I=r(2584),M=r(18152),J=r(11555),R=r(41452),j=r(24681);let F=class extends((0,w.h)((0,I.n)((0,N.M)((0,D.Q)((0,P.x)((0,_.O)((0,C.Y)((0,L.q)((0,E.I)((0,p.R)((0,x.V)((0,O.N)((0,l.p)(S.Z)))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,y.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(h.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,g.M9)(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=(0,j.QV)(i,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=(0,j.QV)(i,e.sublayers,(0,g.M9)(e.origin))}}const o=[],l={writeSublayerStructure:a,...s};let n=a;i.forEach((e=>{const t=e.write({},l);o.push(t),n=n||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),n&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new J.R({layer:this,scale:(0,f.yZ)({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const l=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},n=e&&e.spatialReference,y=n.wkid||JSON.stringify(n.toJSON());o.dpi*=i;const p={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:t+","+r,...o,...l,...p}}async fetchImage(e,t,r,s){var a,l;const n={responseType:"image",signal:null!=(a=null==s?void 0:s.signal)?a:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,s),f:"image",_ts:this.alwaysRefetch?Date.now():null!=(l=null==s?void 0:s.timestamp)?l:null,...this.customParameters,token:this.apiKey}},y=this.parsedUrl.path+"/export";return null==n.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(0,i.default)(y,n).then((e=>e.data)).catch((e=>{if((0,h.D_)(e))throw e;throw new o.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${y}`,{error:e})})):Promise.reject(new o.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json"}},{data:r}=await(0,i.default)(this.url,t),{extent:s,fullExtent:o,timeExtent:l}=r,n=s||o;return{fullExtent:n&&v.Z.fromJSON(n),timeExtent:l&&a.Z.fromJSON({start:l[0],end:l[1]})}}loadAll(){return(0,n.GZ)(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,i.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};(0,s._)([(0,c.Cb)()],F.prototype,"alwaysRefetch",void 0),(0,s._)([(0,c.Cb)()],F.prototype,"dpi",void 0),(0,s._)([(0,c.Cb)()],F.prototype,"gdbVersion",void 0),(0,s._)([(0,c.Cb)()],F.prototype,"imageFormat",void 0),(0,s._)([(0,m.r)("imageFormat",["supportedImageFormatTypes"])],F.prototype,"readImageFormat",null),(0,s._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],F.prototype,"imageMaxHeight",void 0),(0,s._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],F.prototype,"imageMaxWidth",void 0),(0,s._)([(0,c.Cb)()],F.prototype,"imageTransparency",void 0),(0,s._)([(0,c.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),(0,s._)([(0,c.Cb)({json:{read:!1,write:!1}})],F.prototype,"labelsVisible",void 0),(0,s._)([(0,c.Cb)({type:["ArcGISMapServiceLayer"]})],F.prototype,"operationalLayerType",void 0),(0,s._)([(0,c.Cb)({json:{read:!1,write:!1}})],F.prototype,"popupEnabled",void 0),(0,s._)([(0,c.Cb)()],F.prototype,"sourceJSON",void 0),(0,s._)([(0,c.Cb)({json:{write:{ignoreOrigin:!0}}})],F.prototype,"sublayers",void 0),(0,s._)([(0,b.c)("sublayers",{layers:{type:[R.Z]},visibleLayers:{type:[u.z8]}})],F.prototype,"writeSublayers",null),(0,s._)([(0,c.Cb)({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),(0,s._)([(0,c.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],F.prototype,"type",void 0),(0,s._)([(0,c.Cb)(M.HQ)],F.prototype,"url",void 0),F=(0,s._)([(0,d.j)("esri.layers.MapImageLayer")],F);const q=F},11555:(e,t,r)=>{r.d(t,{R:()=>h});var s=r(56140),i=r(82677),a=r(77204),o=r(79881),l=(r(95830),r(68055),r(36544),r(87566)),n=r(18152),y=r(24681);const p={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let h=class extends((0,a.p)(i.Z)){constructor(e){super(e),this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>e.toExportImageJSON()));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,y.FN)(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(p[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){const e=this.visibleSublayers.filter((e=>null!=e.definitionExpression));return e.length?JSON.stringify(e.reduce(((e,t)=>(e[t.id]=t.definitionExpression,e)),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const t=this.layer.sublayers,r=t=>{const s=this.scale,i=0===s,a=0===t.minScale||s<=t.minScale,o=0===t.maxScale||s>=t.maxScale;t.visible&&(i||a&&o)&&(t.sublayers?t.sublayers.forEach(r):e.unshift(t))};t&&t.forEach(r);const s=this._get("visibleSublayers");return!s||s.length!==e.length||s.some(((t,r)=>e[r]!==t))?e:s}toJSON(){const e=this.layer;let t={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?t.dynamicLayers=this.dynamicLayers:t={...t,layers:this.layers,layerDefs:this.layerDefs},t}};(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"dynamicLayers",null),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"hasDynamicLayers",null),(0,s._)([(0,o.Cb)()],h.prototype,"layer",null),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"layers",null),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"layerDefs",null),(0,s._)([(0,o.Cb)({type:Number})],h.prototype,"scale",void 0),(0,s._)([(0,o.Cb)(n.qG)],h.prototype,"timeExtent",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"version",null),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"visibleSublayers",null),h=(0,s._)([(0,l.j)("esri.layers.mixins.ExportImageParameters")],h)}}]);